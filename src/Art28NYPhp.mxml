<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:onin="com.malebolgia.onin.*"
	layout="vertical" 
	creationComplete="init();"  color="#050404" backgroundGradientAlphas="[1.0, 1.0]" backgroundGradientColors="[#FFFFFF, #FAFAFA]">
<mx:Style source="css/style.css"/>
<mx:Script>
	<![CDATA[
		import mx.formatters.NumberBaseRoundType;
            import mx.collections.ArrayCollection;
            import mx.formatters.DateFormatter; 
            import mx.controls.DateField;
            import mx.events.ValidationResultEvent;
		    import mx.controls.Alert;
		    
		    //Globals   */
		    //Number of millisecondsPerDay to set defaults
            private const millisecondsPerDay:int = 1000 * 60 * 60 * 24;

		    [Bindable]
            public var sex:ArrayCollection = new ArrayCollection(
                [ {label:"Male", data:1}, 
                  {label:"Female", data:2},
                  {label:"Male and Female", data:3} ]);
            
            [Bindable]
            public var timeCome:ArrayCollection = new ArrayCollection(
                [ {label:"12:00 AM", data:1}, 
                  {label:"01:00 AM", data:2},
                  {label:"02:00 AM", data:3}, 
                  {label:"03:00 AM", data:4}, 
                  {label:"04:00 AM", data:5}, 
                  {label:"05:00 AM", data:6}, 
                  {label:"06:00 AM", data:7}, 
                  {label:"07:00 AM", data:8}, 
                  {label:"08:00 AM", data:9}, 
                  {label:"09:00 AM", data:10}, 
                  {label:"10:00 AM", data:11}, 
                  {label:"11:00 AM", data:12}, 
                  {label:"12:00 PM", data:13}, 
                  {label:"01:00 PM", data:14}, 
                  {label:"02:00 PM", data:15}, 
                  {label:"03:00 PM", data:16},
                  {label:"04:00 PM", data:17}, 
                  {label:"05:00 PM", data:18}, 
                  {label:"06:00 PM", data:19}, 
                  {label:"07:00 PM", data:20}, 
                  {label:"08:00 PM", data:21}, 
                  {label:"09:00 PM", data:22},
                  {label:"10:00 PM", data:23},
                  {label:"11:00 PM", data:24} ]);
                  
            [Bindable]
            public var priceBran1:ArrayCollection = new ArrayCollection(
                [ {label:"28th Standard 男女別ドミ<シェア２人部屋>お１人様 $45", data:1}, 
                  {label:"28th Standard 個室利用<１人部屋>$85", data:2},
                  {label:"28th Standard 個室利用<２人部屋>$90", data:3},
                  {label:"28th Standard 個室利用<３人部屋>$120", data:4},
                  {label:"28th Standard Room LUX個室利用<１人部屋>$119", data:5} ]);
                  
            [Bindable]
            public var priceBran2:ArrayCollection = new ArrayCollection(
                [ {label:"28th STD plus 個室利用<２人部屋>$90", data:1}, 
                  {label:"28th STD plus 個室利用<３人部屋>$120", data:2},
                  {label:"28th STD plus Whole Rent<２人部屋＋３人部屋>$220", data:3} ]);
             
            [Bindable]
            public var priceBran3:ArrayCollection = new ArrayCollection(
                [ {label:"34th Part.1 個室利用<１人部屋>$69", data:1}, 
                  {label:"34th Part.1 個室利用<３人部屋>$89", data:2},
                  {label:"34th Part.1 Whole Rent<１人部屋＋３人部屋>$149", data:3} ]);
                  
             [Bindable]
            public var priceBran4:ArrayCollection = new ArrayCollection(
                [ {label:"34th Part.2 女性用ドミトリー<シェア３人部屋>お１人様 $39", data:1}, 
                  {label:"34th Part.2 個室利用<３人部屋>$117", data:2},
                  {label:"34th Part.2 Whole Rent<３人部屋＋リビング予備二段ベッド>$175", data:3} ]);                      
                  
            [Bindable]
            public var roomBran:ArrayCollection = new ArrayCollection(
                [ {label:"28th Standard", data:1}, 
                  {label:"28th STD plus", data:2},
                  {label:"34th Part.1", data:3},
                  {label:"34th Part.2", data:4}]);  
             
            [Bindable]
            public var howOld:ArrayCollection = new ArrayCollection(
                [ {label:"18歳〜20歳代", data:1}, 
                  {label:"30代", data:2},
                  {label:"40代", data:3},
                  {label:"50代以上", data:4}]);         

           
           //functions ----------------------------------------------
           
           //initialize       
           private function init():void{
                var dt:Date = new Date();
                var dtf:DateFormatter = new DateFormatter;
                //Default values
                checkIn.text = dtf1.format(dt);
                checkIn.selectedDate = dt;
                
                checkOut.text = dtf1.format(dateAdd("date", 1, dt));
                checkOut.selectedDate = dateAdd("date", 1, dt);
                
                senderSex.selectedItem.data = 1
                senderTimeCome.selectedItem.data = 1
                senderPriceBran.selectedItem.data = 1;
                
                calculate();
                
               
            } 
            
            private function rePopulate():void{
              if (senderRoomBran.selectedItem.data == 1){
                 senderPriceBran.dataProvider = priceBran1;
              }
              else if (senderRoomBran.selectedItem.data == 2){
                 senderPriceBran.dataProvider = priceBran2;
              }
              else if (senderRoomBran.selectedItem.data == 3){
                 senderPriceBran.dataProvider = priceBran3;
              }
               else if (senderRoomBran.selectedItem.data == 4){
                 senderPriceBran.dataProvider = priceBran4;
              }
              
              calculate();
             
            }
            
            //calculate
            private function calculate():void{
            	//total_val =  (GetDaysLeft * how_txt.text *  howmany_in.text);
            	var dtTest:Date; 
            	var total_price:Number = 0;
            	var price_plan:Number, getDateDiff:Number = 1, additionalPrice:Number = 0, 
            	    pricingAdd:Number = 0, discount:Number = 1, addedPriceHowMany:Number = 0, 
            	    getOtherDude:Number = 0,  i:Number,
            	    basicPrice:Boolean = true;
            	var incrementingPrice:Number = 0;
            	var howManyToCalc:Number = 0;
            	var stringDeb:String = "";
            	
			    if (checkIn.selectedDate <  checkOut.selectedDate ) {
            	        getDateDiff = calculateDays(checkIn.selectedDate, checkOut.selectedDate);
                }
                else {
                	Alert.show("注意：日程間違いを防ぐ為、チェックアウトの日程を先に決めてから、チェックインの日程をご決定ください。");
                }

                //new Pricing much Complex
                //First Selection
                 if (senderRoomBran.selectedItem.data == 1){
                     //Start Pricing First Selection
                     if (senderPriceBran.selectedItem.data == 1){
                     	price_plan = 45;
                     	howManyToCalc = senderHowmany.value;
                     	basicPrice = true;
                     }
                     else if (senderPriceBran.selectedItem.data == 2){
                     	price_plan = 85;
                     	howManyToCalc = senderHowmany.value;
                     	basicPrice = true;
                     }
                     else if (senderPriceBran.selectedItem.data == 3){
                     	price_plan = 90;
                     	howManyToCalc = 1;
                     	basicPrice = false;
                     }
                     else if (senderPriceBran.selectedItem.data == 4){
                     	price_plan = 120;
                     	howManyToCalc = 1;
                     	basicPrice = false;
                     }
                     else if (senderPriceBran.selectedItem.data == 5){
                     	price_plan = 119;
                     	howManyToCalc = 1;
                     	basicPrice = false;
                     }
                     
                 }
                 
                 //Second Selection
                 else if (senderRoomBran.selectedItem.data == 2){
                     //Start Pricing First Selection
                     if (senderPriceBran.selectedItem.data == 1){
                     	price_plan = 90;
                     	howManyToCalc = 1;
                     	basicPrice = false;
                        }
                     else if (senderPriceBran.selectedItem.data == 2){
                     	price_plan = 120;
                     	howManyToCalc = 1;
                     	basicPrice = false;
                     }
                     else if (senderPriceBran.selectedItem.data == 3){
                     	price_plan = 220;
                     	howManyToCalc = 1;
                     	basicPrice = false;
                     }
                     
                 }
                 
                 //Third Selection
                 else if (senderRoomBran.selectedItem.data == 3){
                     //Start Pricing First Selection
                     if (senderPriceBran.selectedItem.data == 1){
                     	price_plan = 69;
                     	howManyToCalc = 1;
                     	basicPrice = false;
                     }
                     else if (senderPriceBran.selectedItem.data == 2){
                     	price_plan = 89;
                     	howManyToCalc = 1;
                     	basicPrice = false;
                     }
                     else if (senderPriceBran.selectedItem.data == 3){
                     	price_plan = 149;
                     	howManyToCalc = 1;
                     	basicPrice = false;
                     }
                     
                 }
                 
                 //Fourth Selection
                 else if (senderRoomBran.selectedItem.data == 4){
                     //Start Pricing First Selection
                     if (senderPriceBran.selectedItem.data == 1){
                     	price_plan = 39;
                     	howManyToCalc = senderHowmany.value;
                     	basicPrice = true;
                     }
                     else if (senderPriceBran.selectedItem.data == 2){
                     	price_plan = 117;
                     	howManyToCalc = 1;
                     	basicPrice = false;
                     }
                     else if (senderPriceBran.selectedItem.data == 3){
                     	price_plan = 175;
                     	howManyToCalc = 1;
                     	basicPrice = false;
                     }
                     
                 }
                
                
              pricingAdd = 10; //Add 10 USD
              discount = .80; //discount 20%
              incrementingPrice = 0;

               for (i = 0; i <= (getDateDiff - 1); i++){ //From here I can start Calculating
               	    
               	    dtTest = dateAdd("date", i, checkIn.selectedDate);
		                //Additional Price
		                if ( (dtTest.getMonth() + 1) == 12 && (dtTest.getDate() >= 15 ) && (dtTest.getDate()) <= 31  ){ //December 15 - 31 
		                      
		                      incrementingPrice +=  (price_plan + pricingAdd)
		                      
		                       if (senderHowmany.value >= 2 && !basicPrice ) {
                                  addedPriceHowMany += ((senderHowmany.value * 10) - 10); //Added Price
                                  //getOtherDude += 10; //This is where gonna minus the added price
                               }
		                }
		                else if ( (dtTest.getMonth() + 1) == 1 && (dtTest.getDate() >= 1 ) && (dtTest.getDate()) <= 4 ){ //January 01 - 05 

		                      incrementingPrice +=  (price_plan + pricingAdd)
		                      
		                       if (senderHowmany.value >= 2 && !basicPrice ) {
                                  addedPriceHowMany += ((senderHowmany.value * 10) - 10); //Added Price
                               }
		                }
		                else if ( (dtTest.getMonth() + 1) == 3 && (dtTest.getDate() >= 1 ) && (dtTest.getDate()) <= 31 ){ //March 01 - 31 

		                      incrementingPrice +=  (price_plan + pricingAdd)
		                      
		                       if (senderHowmany.value >= 2 && !basicPrice ) {
                                 addedPriceHowMany += ((senderHowmany.value * 10) - 10); //Added Price
                               }
		                }
		                else if ( (dtTest.getMonth() + 1) == 4 && (dtTest.getDate() == 1 ) ) { //April 01 

		                      incrementingPrice +=  (price_plan + pricingAdd)
		                       if (senderHowmany.value >= 2 && !basicPrice ) {
                                 addedPriceHowMany += ((senderHowmany.value * 10) - 10); //Added Price
                               }
		                }
		                else if ( (dtTest.getMonth() + 1) == 4 && (dtTest.getDate() >= 27 ) && (dtTest.getDate()) <= 30 ){ //April 27 - 30 

		                      incrementingPrice +=  (price_plan + pricingAdd)
		                       if (senderHowmany.value >= 2 && !basicPrice ) {
                                  addedPriceHowMany += ((senderHowmany.value * 10) - 10); //Added Price
                               }
		                }
		                else if ( (dtTest.getMonth() + 1) == 5 && (dtTest.getDate() >= 1 ) && (dtTest.getDate()) <= 7 ){ //May 01 - 07 

		                      incrementingPrice +=  (price_plan + pricingAdd)
		                       if (senderHowmany.value >= 2 && !basicPrice ) {
                                  addedPriceHowMany += ((senderHowmany.value * 10) - 10); //Added Price
                               }
		                }
		                 else if ( (dtTest.getMonth() + 1) == 9 && (dtTest.getDate() >= 1 ) && (dtTest.getDate()) <= 30 ){ //September 01 - 30 

		                      incrementingPrice +=  (price_plan + pricingAdd)
		                       if (senderHowmany.value >= 2 && !basicPrice ) {
                                  addedPriceHowMany += ((senderHowmany.value * 10) - 10); //Added Price
                                  //Alert.show("damn.", "Error");
                               }
		                }
		                else if ( (dtTest.getMonth() + 1) == 10 && (dtTest.getDate() == 1 ) ) { //October 01 

		                      incrementingPrice +=  (price_plan + pricingAdd)
		                       if (senderHowmany.value >= 2 && !basicPrice ) {
                                 addedPriceHowMany += ((senderHowmany.value * 10) - 10); //Added Price
                               }
		                }
		                else if ( (dtTest.getMonth() + 1) == 1 && (dtTest.getDate() >= 5 ) && (dtTest.getDate()) <= 31  ){ //January 05 - 31 

		                      incrementingPrice +=  (price_plan * discount)
		                       if (senderHowmany.value >= 2 && !basicPrice ) {
                                // addedPriceHowMany += ((senderHowmany.value * discount) - (1 * discount)); //Discount Price
                                 //getOtherDude += (1 * discount); //This is where gonna minus the Discount price
                               }
		                }
		                else if ( (dtTest.getMonth() + 1) == 2 && (dtTest.getDate() >= 2 ) && (dtTest.getDate()) <= 29  ){ //February 01 - 29 

		                      incrementingPrice +=  (price_plan * discount)
		                       if (senderHowmany.value >= 2 && !basicPrice ) {
                                 // addedPriceHowMany += ((senderHowmany.value * discount) - (1 * discount)); //Discount Price
                                 //getOtherDude += (1 * discount); //This is where gonna minus the Discount price
                               }
		                }
		                else if ( (dtTest.getMonth() + 1) == 3 && (dtTest.getDate() == 1 ) ) { //March 01 

		                      incrementingPrice +=  (price_plan * discount)
		                       if (senderHowmany.value >= 2 && !basicPrice ) {
                                 // addedPriceHowMany += ((senderHowmany.value * discount) - (1 * discount)); //Discount Price
                                 //getOtherDude += (1 * discount); //This is where gonna minus the Discount price
                               }
		                }
		                else {
		                      incrementingPrice +=  price_plan 
		                }
		                
		               //incrementingPrice += price_plan;
		               stringDeb += " " + dtTest + " - Price Add: "  + pricingAdd + "\n";
		               
               } //for 
                
       
                total_price = (howManyToCalc *  incrementingPrice ) + (addedPriceHowMany - getOtherDude);
                senderTotal.text = currencyFormatter.format(total_price.toString());

             
            }

            //date functions
            private function getDaysDifference(minDate:Date, maxDate:Date):uint
			{
			// for testing
			            // var newDate:Date = new Date(2007,9,23);
			             //var oldDate:Date = new Date (2007, 8, 23);
			        return Math.ceil(( minDate.getTime() - maxDate.getTime()) /	millisecondsPerDay);
			
			}
			private function calculateDays( start:Date, end:Date ) :int
			{
			      var daysInMilliseconds:int = 1000*60*60*24
			      return (  (end.time - start.time)  / daysInMilliseconds );
			
			}  
			//dateAdd
			private function dateAdd(datepart:String = "", number:Number = 0, date:Date = null):Date {
                if (date == null) {
                    /* Default to current date. */
                    date = new Date();
                }
 
                var returnDate:Date = new Date(date.time);;
 
                switch (datepart.toLowerCase()) {
                    case "fullyear":
                    case "month":
                    case "date":
                    case "hours":
                    case "minutes":
                    case "seconds":
                    case "milliseconds":
                        returnDate[datepart] += number;
                        break;
                    default:
                        /* Unknown date part, do nothing. */
                        break;
                }
                return returnDate;
            }
            //label function
			private function fnDtfLblFunct(date:Date):String
			{
				return dtf1.format(date);
			}
			//parse function
			private function fnDtfPrsFunct(valueString:String,formatString:String):Date
			{
				return new Date(DateField.stringToDate(dtf2.format(valueString),"DD/MM/YY"));
			}    
			
			//Send email
			private function sendMail():void{
				
			//senderName
			//senderEmail
			//senderSex
			//senderAddress
			//senderTel
			//checkIn
			//checkOut
			//senderTimeCome
			//senderHowmany
			//senderPriceBran
			//senderMemo	
			
			var _senderName:String = senderName.text;
	        var _senderEmail:String = senderEmail.text;
	        var _senderSex:String = senderSex.selectedItem.label;
	        var _senderAddress:String = senderAddress.text;
	        var _senderTel:String = senderTel.text;
	        var _checkIn:String = checkIn.text;
	        var _checkOut:String = checkOut.text;
	        var _senderTimeCome:String = senderTimeCome.selectedItem.label;
	        var _senderHowmany:String = senderHowmany.value.toString();
	        var _senderPriceBran:String = senderPriceBran.selectedItem.label;
	        var _senderMemo:String = cleanHTML(senderMemo.htmlText);
	        var _senderTotal:String = senderTotal.text;
	        var _senderHowOld:String = senderHowOld.selectedItem.label;
	        var _senderRoomBran:String = senderRoomBran.selectedItem.label;
	        
	        
	        //Validation
			        var evValidMail:ValidationResultEvent = mailValidator.validate();
					var evValidName:ValidationResultEvent = nameValidator.validate();
					var evValidAddress:ValidationResultEvent = addressValidator.validate();
					var evValidTel:ValidationResultEvent = telValidator.validate();
					
					if (evValidMail.type == ValidationResultEvent.VALID 
					&& evValidName.type == ValidationResultEvent.VALID
					&& evValidAddress.type == ValidationResultEvent.VALID
					&& evValidTel.type == ValidationResultEvent.VALID
					){
						emailService.send({
						                   senderName: _senderName, 
						                   senderEmail:_senderEmail, 
						                   senderSex:_senderSex, 
						                   senderHowOld:_senderHowOld,
						                   senderRoomBran:_senderRoomBran,
						                   senderAddress: _senderAddress,
						                   senderTel: _senderTel, 
						                   checkIn:_checkIn, 
						                   checkOut:_checkOut, 
						                   senderTimeCome: _senderTimeCome,
						                   senderHowmany:_senderHowmany, 
						                   senderPriceBran:_senderPriceBran, 
						                   senderMemo: _senderMemo,
						                   senderTotal: _senderTotal
						                   
						                   });
					}
					else{
						Alert.show("There are Form errors", "Error");
					}
	       
	        } 
	        
		    //For rich text Editor
		    private function cleanHTML(str:String):String
			{
				    var pattern:RegExp = /<TEXTFORMAT.*?>/g;
				    var str:String = str.replace(pattern, ""); 
				    //pattern = /<FONT.*?>/g;
				    //str = str.replace(pattern, ""); 
				    //pattern = /<\/FONT.*?>/g;
				    //str = str.replace(pattern, "");
				    pattern = /<FONT FACE=\"(.*?)\" SIZE=\"(.*?)\" COLOR=\"(.*?)\" .*?>/g;
				    str = str.replace(pattern, "<span style=\"font-family: $1;font-size: $2;color: $3;\" >");
				    pattern = /<\/FONT.*?>/g;
				    str = str.replace(pattern, "</span>"); 
				    pattern = /<\/TEXTFORMAT.*?>/g;
				    str = str.replace(pattern, ""); 
				    return str;
				}
	        
	        private function emailResult():void{
            Alert.show("We will contact you as soon as possible", "Thank you");
            clearForm();
			}
			
			private function clearForm():void{
				//resultLabel.text="";
				//emailSubject.text="";
				//emailMessage.text="";
			var dt:Date = new Date();
            var dtf:DateFormatter = new DateFormatter;
            checkIn.text = dtf1.format(dt);
            checkIn.selectedDate = dt;
            checkOut.text = dtf1.format(dateAdd("date", 1, dt));
            checkOut.selectedDate = dateAdd("date", 1, dt);
			senderName.text = "";
	        senderEmail.text = "";
	        senderSex.selectedIndex = 0;
	        senderHowOld.selectedIndex = 0;
	        senderAddress.text = "";
	        senderTel.text = "";
	        senderTimeCome.selectedIndex = 0;
	        senderHowmany.value = 1;
	        senderPriceBran.selectedIndex = 0;
	        senderRoomBran.selectedIndex = 0;
	        senderMemo.htmlText = "";
	        
	        calculate();
			} 
                  
            //Sample Calling the ComboBox Selected
            /*
            private function closeHandler(event:Event):void {
                myLabel.text = "You selected: " +  ComboBox(event.target).selectedItem.label;
                myData.text = "Data: " +  ComboBox(event.target).selectedItem.data;
            } 
            */   
                  

	]]>
</mx:Script>

<mx:HTTPService id="emailService" url="php/sendthisArt.php" method="POST" resultFormat="xml" result="emailResult()" useProxy="false"/>
	<mx:EmailValidator id="mailValidator"
		source="{senderEmail}" property="text" 
		requiredFieldError="Enter your email [正しいe-mailアドレスをご入力ください]" required="true" />
	<mx:StringValidator id="nameValidator"  
		source="{senderName}" property="text" 
		requiredFieldError="Enter your name [お名前をご入力ください]" required="true"/>
	<mx:StringValidator id="addressValidator"  
		source="{senderAddress}" property="text" 
		requiredFieldError="Enter your Address [住所をご入力ください]" required="true"/>	
	<mx:StringValidator id="telValidator"  
		source="{senderTel}" property="text" 
		requiredFieldError="Enter your Telephone [住所をご入力ください]" required="true"/>
	<onin:FieldComparisonValidator id="valConfirmEmail" source="{senderConfirmEmail}" property="text" destination="{senderEmail}" destinationProperty="text" required="true" />	

 <mx:CurrencyFormatter id="currencyFormatter"
            currencySymbol="$"
            useThousandsSeparator="true"
            precision="2" />

<mx:DateFormatter id="dtf1" formatString="MMMM DD YYYY"/>
<mx:DateFormatter id="dtf2" formatString="DD/MM/YY"/>

	<mx:Panel width="786" height="1013" layout="absolute" id="reservationBox" title="Reservation" horizontalAlign="center" color="#020202" backgroundColor="#FEFEFE" fontSize="12" fontWeight="bold" fontFamily="Arial" horizontalCenter="0">
		<mx:Label x="310" y="360" fontSize="11"/>
		<mx:Form height="923" width="670" horizontalCenter="0" verticalCenter="-6" >
			<mx:FormItem label="お名前 （ローマ字:)" width="571" height="35" horizontalAlign="left" required="true">
				<mx:TextInput width="404" borderColor="#0A0A0A" borderStyle="solid" borderThickness="2" id="senderName"/>
			</mx:FormItem>
			<mx:FormItem label="メールアドレス:" width="557" height="35" horizontalAlign="left" required="true">
				<mx:TextInput width="150" borderColor="#0A0A0A" borderStyle="solid" borderThickness="2" id="senderEmail"/>
			</mx:FormItem>
			<mx:FormItem label="メールアドレス（確認）:" width="609" height="35" horizontalAlign="left" required="true" fontSize="11">
				<mx:TextInput width="150" borderColor="#0A0A0A" borderStyle="solid" borderThickness="2" id="senderConfirmEmail"/>
			</mx:FormItem>
			<mx:FormItem label="性別:" width="527" height="35" horizontalAlign="left" required="true">
				<mx:ComboBox editable="false" dataProvider="{sex}" close="" id="senderSex"></mx:ComboBox>
			</mx:FormItem>
			<mx:FormItem label="年齢層:" width="564" height="35" horizontalAlign="left" required="true">
				<mx:ComboBox editable="false" dataProvider="{howOld}"  id="senderHowOld" width="170"></mx:ComboBox>
			</mx:FormItem>
			<mx:FormItem label="住所:" width="534" height="35" horizontalAlign="left" required="true">
				<mx:TextInput width="150" borderColor="#0A0A0A" borderStyle="solid" borderThickness="2" id="senderAddress"/>
			</mx:FormItem>
			<mx:FormItem label="TEL:" width="473" height="35" horizontalAlign="left" required="true">
				<mx:TextInput width="150" borderColor="#0A0A0A" borderStyle="solid" borderThickness="2" id="senderTel"/>
			</mx:FormItem>
			<mx:FormItem label="Check in day(日程):" width="561" height="35" horizontalAlign="left" required="true">
				<mx:DateField width="226" borderColor="#000000" labelFunction="fnDtfLblFunct" parseFunction="fnDtfPrsFunct" cornerRadius="2" fillAlphas="[1.0, 1.0]" fillColors="[#CB9696, #8E1111, #533737, #533737]" showToday="true" id="checkIn" close="calculate()" />
			</mx:FormItem>
			<mx:FormItem label="Check out day:(日程)" width="567" height="35" horizontalAlign="left" required="true">
				<mx:DateField width="226" borderColor="#000000" labelFunction="fnDtfLblFunct" parseFunction="fnDtfPrsFunct" cornerRadius="2" fillAlphas="[1.0, 1.0]" fillColors="[#CB9696, #8E1111, #533737, #533737]" showToday="true" id="checkOut" close="calculate()" />
			</mx:FormItem>
			<mx:FormItem label="チェックイン予定時間 :" width="539" height="35" horizontalAlign="left" required="true">
				<mx:ComboBox editable="false" dataProvider="{timeCome}"  id="senderTimeCome"></mx:ComboBox>
			</mx:FormItem>
			<mx:FormItem label="人数:" width="245" height="35" horizontalAlign="left" required="false">
				<mx:NumericStepper id="senderHowmany" minimum="1" maximum="500" change="calculate()" />
			</mx:FormItem>
			<mx:FormItem label="ルームプラン:" width="564" height="35" horizontalAlign="left" required="true">
				<mx:ComboBox editable="false" dataProvider="{roomBran}" close="rePopulate()"  id="senderRoomBran" width="370"></mx:ComboBox>
			</mx:FormItem>
			<mx:FormItem label="プライスプラン:" width="564" height="35" horizontalAlign="left" required="true">
				<mx:ComboBox editable="false" dataProvider="{priceBran1}" close="calculate()"  id="senderPriceBran" width="370"></mx:ComboBox>
			</mx:FormItem>
			
				<mx:RichTextEditor title="Memo" width="575" id="senderMemo" fontSize="12" height="284">
				</mx:RichTextEditor>
			
			<mx:FormItem label="トータルプライス:" width="298" height="35" horizontalAlign="right" required="false" fontSize="16">
				<mx:TextInput width="150" borderColor="#0A0A0A" borderStyle="solid" borderThickness="2" id="senderTotal" enabled="true" editable="false"/>
			</mx:FormItem>
			
				<mx:Button label="送信" click="sendMail()" width="87" height="35" fontSize="15" borderColor="#131415"/>
			
		
			
		</mx:Form>
	</mx:Panel>
	
</mx:Application>
